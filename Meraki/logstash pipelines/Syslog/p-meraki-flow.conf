######################################################################################
#                                                                                  
#  Meraki URL Flow Log Pipeline                                        
#                                                                                  
#  Last Revised:    04/13/2019 
#  Transport:       Pipeline form p-meraki-input                                   
#  Compatibility:   ecs 1.5.0 dev                                    
#  Notes:                    
#  To Do:           Logic for network protocol
#                   Implement Community ID filter                                                                            
######################################################################################

input { 
    pipeline { 
        address => "meraki-flow" 
    } 
}

filter {

    grok {    
        match => { "message" => "%{INT:[millis]}.%{INT:[nanos]} ip_flow_%{NOTSPACE:flow_state} src=%{IP:[source][ip]} dst=%{IP:[destination][ip]} protocol=%{WORD:[network][transport]} sport=%{NUMBER:[source][port]} dport=%{NUMBER:[destination][port]} translated_src_ip=%{IP:[source][nat][ip]} translated_port=%{NUMBER:[source][nat][port]}" }
        match => { "message" => "%{INT:[millis]}.%{INT:[nanos]} ip_flow_%{NOTSPACE:flow_state} src=%{IP:[source][ip]} dst=%{IP:[destination][ip]} protocol=%{WORD:[network][transport]} sport=%{NUMBER:[source][port]} dport=%{NUMBER:[destination][port]} translated_dst_ip=%{IP:[destination][nat][ip]} translated_port=%{NUMBER:[destination][nat][port]}" }
        match => { "message" => "%{INT:[millis]}.%{INT:[nanos]} ip_flow_%{NOTSPACE:flow_state} src=%{IP:[source][ip]} dst=%{IP:[destination][ip]} protocol=%{WORD:[network][transport]} ?(?:translated_dst_ip=%{IP:[destination][nat][ip]})? ?(?:translated_src_ip=%{IP:[source][nat][ip]})?" }   
        match => { "message" => "%{INT:[millis]}.%{INT:[nanos]} %{WORD:[observer][name]} %{WORD:[event][module]} ?(?:%{WORD:[event][action]})? src=%{IP:[source][ip]} dst=%{IP:[destination][ip]} ?(?:mac=%{MAC:[source][mac]})? protocol=%{WORD:[network][protocol]} sport=%{NUMBER:[source][port]} dport=%{NUMBER:[destination][port]} ?(?:pattern: %{GREEDYDATA:[rule][name]})?" }
        match => { "message" => "%{INT:[millis]}.%{INT:[nanos]} %{WORD:[observer][name]} %{WORD:[event][module]} ?(?:%{WORD:[event][action]})? src=%{IP:[source][ip]} dst=%{IP:[destination][ip]} ?(?:mac=%{MAC:[source][mac]})? protocol=%{WORD:[network][protocol]} type=%{INT:[icmp][type]} pattern: %{INT:[rule][number]} %{GREEDYDATA:[rule][name]}" }
}   
    
     mutate {

        ######################################################
        ###                Add core ECS fields             ###
        ######################################################
        add_field => { "[event][kind]" => "event" }
        add_field => { "[event][category]" => "network"}
        add_field => { "[event][dataset]" => "meraki.flows" }
        add_field => { "[event][category]" => "network" }
        add_field => { "[event][outcome]" => "success" }
        add_field => { "[event][type]" => "connection" }    


        ######################################################
        ###             Populate Observer fields           ###
        ######################################################
        add_field => { "[observer][vendor]" => "meraki" }
        rename =>    { "[host]" => "[observer][ip]"  }

    }

    if ![event][module] {
        mutate { add_field => { "[event][module]" => "flows" } }
    }


    ######################################################
    ###         Fix for Nanosecond timestamps          ###
    ######################################################
    truncate {
            fields => "nanos"
            length_bytes => 3
    }
    date {
        match => [ "%{millis}%{nanos}", "UNIX_MS"]
        target => "@timestamp"
    }

    ######################################################
    ###        Mark start and end event types          ###
    ######################################################
    if [flow_state] {
        mutate {             
            add_field => { "[event][action]" => "connection_%{flow_state}"}
        }
    }

    ######################################################
    ###        Final fixes and cleanup          ###
    ######################################################
    mutate {
        gsub => [ "[observer][name]", "_", "." ]
        remove_field => [ "millis", "nanos", "flow_state", "type", "@version"]
    }
}


output {

    ## Meraki Flow Logging
    elasticsearch {
        hosts => "${ES_HOST}"
        user => "${ES_INGEST}"
        password => "${ES_INGEST_PW}"
        index => "ecs-meraki-flows"
        pipeline => "meraki"
    }
}
