######################################################################################
#                                                                                  
#  Meraki Pipeline Input                                                  
#                                                                                  
#  Last Revised:    04/29/2019 
#  Transport:       syslog 5000                                  
#  Compatibility:   ecs 1.5.0 dev                                    
#  Notes:           pipeline input for full meraki syslogs      
#                   can't remember why I went with udp over syslog
#  Todos:          
######################################################################################

input {
      udp {
      
        ## I've run into *nix configs that default to ipv6 and won't open an
        ## IPv4 port w/o hard coding, have yet to figure out why, so often hard 
        ## code IP the pipeline should listen on
        
        host => "${LOGSTASH_IP}"
        port => ${LOGSTASH_PORT}
        type => "meraki"
    }
}

filter {

    ######################################################
    ###         Operations for all pipelines           ###
    ######################################################
    
    ## Hash original event for nonrepudiation
    ######################################################
    fingerprint {
        target => "[event][hash]"
    }
    
    ## Make any global Meraki mutations
    ######################################################
    mutate {
        add_field => { "[event][created]" => "%{@timestamp}" }
        add_field => { "[event][original]" => "%{message}" }
        add_field => { "[ecs][version]" => "1.5.0" }
        add_field => { "[event][module]" => "meraki" }
    }

    ######################################################
    ###           Identifty Meraki Log Types           ###
    ######################################################

    ## VPN Registry
    ######################################################
    if "vpn_registry_change" in [message] {
        drop{}
    }

    ## URLS
    ######################################################
    else if "urls" in [message] {
        mutate { update => { "type" => "meraki.url" } }
    }

    ## EAP Authentication 802.1x (verify auth vs authz??)
    ######################################################
    else if "8021x_eap" in [message] {
        mutate { update => { "type" => "meraki.auth" } }               
    }

    ## Flow Logs (basically FW accept/deny)
    ######################################################
    else if "ip_flow" in [message] or "pattern:" in [message] or "flows" in [message] {
        mutate { update => { "type" => "meraki.flow" } }               
    }

    ## Contecnt Blocking
    ######################################################
    else if "content_filtering_block" in [message] {
        mutate { update => { "type" => "meraki.content" } }               
    }

    ## IDS Alerts
    ######################################################
    else if "security_event" in [message] {
        mutate { update => { "type" => "meraki.ids" } }               
    }


    
    ## TO DO:
    ##
    ## MX Gateway:
    ##   DHCP, VPN Conenctivity, GW Connectivity, Failover
    ##   IDS events
    ##
    ## MS Switch:
    ##   Port changes, DHCP blocks, 802.1x AAA (verify)
    ##
    ## MR AP:
    ##   802.1x AAA (verify), wpa, assoc, disassoc,
    ##   splash association, wirless ids events,
    ##   flows (verify)
    ######################################################
}

output {
    if [type] == "meraki.url"  {
        pipeline { send_to => "meraki-url"  }
    } 

    else if [type] == "meraki.auth"  {
        pipeline { send_to => "meraki-auth" }
    } 

    else if [type] == "meraki.flow"  {
        pipeline { send_to => "meraki-flow" }
    } 

    else if [type] == "meraki.content"  {
        pipeline { send_to => "meraki-content" }
    } 

    else if [type] == "meraki.ids" {
        pipeline { send_to => "meraki-ids" }
    }

    else {
        pipeline { send_to => "meraki-raw" }
    }

#    file {
#        path => "/var/log/logstash/syslog/meraki-input.log"
#        codec => "rubydebug"
#    }
}