######################################################################################
#                                                                                  
#  Meraki API Device Poller                                                  
#                                                                                  
#  Last Revised:    03/05/2020
#  Transport:       HTTP Poller                                   
#  Compatibility:   ecs 1.5.0                                    
#  Notes:           Initial config to pull device information from Meraki API for 
#                   Enrichment Data
#
######################################################################################

input {

    ##################################################################################
    ### Start with Meraki Orgs
    ##################################################################################

    http_poller {
        urls => {
          meraki => {
            method => get
            url => "https://api.meraki.com/api/v0/organizations"
            headers => {
                "X-Cisco-Meraki-API-Key" => "${meraki_api}"
                Accept => "application/json"
            }
          }
        }
    request_timeout => 60
    schedule => { every => "30s" }
    codec => "json"
    metadata_target => "[temp][org_meta]"
    target => "[organization]"
  }
}


filter {

 ## Remove extra Meraki Organizaiton fields
    mutate {
        remove_field => [ "@version", "[temp]" ]
        ##"[organization][samlConsumerUrls]", "[organization][@version]", "[organization][samlConsumerUrl]", "[organization][@timestamp]" ]
        rename => { "[organization][url]" => "[meraki][organization][url]" }
    }


    ##################################################################################
    ### Get Meraki Network ids per organiaztion 
    ##################################################################################

    http {
        url => "https://n257.meraki.com/api/v0/organizations/%{[organization][id]}/networks"
        verb => "GET"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json" }
        target_body =>  "[organization][network]" 
        target_headers => "[temp]"
    }

    split { field => "[organization][network]" }
    
    ## Drop meta & unnecessary fields
    ## leaving organization[id, name], network[id,name,timezone, type]
    mutate {
        remove_field => [ "@timestamp", "[temp]", "@version" ]
        ## "[network][productTypes]", "[network][disableMyMerakiCom]", "[network][tags]", "[network][organizationId]", "[network][disableRemoteStatusPage]" ]
    }

    ##################################################################################
    ### Get Meraki Device Information per network (org/network/device
    ##################################################################################
    http {
        url => "https://api.meraki.com/api/v0/networks/%{[organization][network][id]}/devices"
        verb => "GET"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json" }
        target_body =>  "[organization][network][device]" 
        target_headers => "[temp][devices_meta]"
    }

    split { field => "[organization][network][device]" }
        
    ## Drop meta & unnecessary fields
    ## leaving organization[id, name], network[id,name,timezone, type]
    mutate {
        remove_field => [ "@timestamp", "@version" ]
    }

    ##################################################################################
    ### Get Meraki VLANS for security devices for lanIp - VLANS MUST BE ENABLED
    ##################################################################################

    if "MX" in [device][model] {

        http {
            url => "https://api.meraki.com/api/v0/networks/%{[organization][network][id]}/vlans"
            verb => "GET"
            headers => {
                "X-Cisco-Meraki-API-Key" => "${meraki_api}"
                Accept => "application/json" }
            target_body =>  "[organization][network][device][vlan]" 
            target_headers => "[temp][vlan_meta]"
        }
        
        split { field => "[organization][network][device][vlan]" }
        
        ## Drop meta & unnecessary fields
        ## leaving organization[id, name], network[id,name,timezone, type]
        mutate {
            remove_field => [ "@timestamp", "@version", "[temp]" ]
                            ## "[vlan][fixedIpAssignments]", 
                            ## "[vlan][reservedIpRanges]", "[vlan][dnsNameservers]", "[vlan][dhcpHandling]", "[vlan][dhcpLeaseTime]", 
                            ## "[vlan][dhcpBootOptionsEnabled]", "[vlan][dhcpOptions]" ]
        }
    }

    ##################################################################################
    ### Get Meraki SSIDs for wireless devices
    ##################################################################################
    if "W" in [device][model] or "MR" in [device][model] {

        http {
            url => "https://api.meraki.com/api/v0/networks/%{[organization][network][id]}/ssids"
            verb => "GET"
            headers => {
                "X-Cisco-Meraki-API-Key" => "${meraki_api}"
                Accept => "application/json" }
            target_body =>  "[organization][network][ssid]" 
            target_headers => "[temp][ssid_meta]"
        }
    
        ## Split on a per Meraki Network result
        split { field => "[organization][network][ssid]" }

        ## Drop meta & unnecessary fields
        ## leaving organization[id, name], network[id,name,timezone, type]
        mutate {
            remove_field => [ "@timestamp", "@version",  "[temp]" ]
        }
    }
   
}

output {
    elasticsearch {
        hosts => "${ES_HOST}"
        user => "${ES_INGEST}"
        password => "${ES_INGEST_PW}"
        index => "ecs-meraki-inventory"
    }
}
