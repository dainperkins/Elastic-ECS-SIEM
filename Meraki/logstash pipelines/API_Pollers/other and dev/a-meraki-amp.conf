######################################################################################
#                                                                                  
#  Meraki API Device Poller - Pull AMP Security Events                                               
#                                                                                  
#  Last Revised:    04/22/2020
#  Transport:       HTTP Poller                                   
#  Compatibility:   ecs 1.5.0                                    
#  Notes:           Pulls Meraki MX AMP Security Events by org/network
#  ToDo:            Syslog is easier, need to pull enrichment data by
#                   Org/network and security appliance
######################################################################################

input {

    ##################################################################################
    # Start with Meraki Orgs
    ##################################################################################

    http_poller {
        urls => {
            meraki => {
                method => get
                url => "https://api.meraki.com/api/v0/organizations"
                headers => {
                    "X-Cisco-Meraki-API-Key" => "${meraki_api}"
                    Accept => "application/json"
                }
            }
        }
        request_timeout => 60
        schedule => { every => "1m" }
        codec => "json"
        metadata_target => "temp_org"
        target => "organization"
    }
}

filter {
    mutate {
          remove_field => [ "temp_org", "[organization][samlConsumerUrl]", "[organization][samlConsumerUrls]" ]
          remove_field => [ "@version", "[organization][@timestamp]", "[organization][@version]", "@timestamp"  ]
    }

    ##################################################################################
    ### Get Meraki Network ids per organiaztion 
    ##################################################################################

    http {
        url => "https://n257.meraki.com/api/v0/organizations/%{[organization][id]}/networks"
        verb => "GET"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json" }
        target_body =>  "m_network" 
        target_headers => "temp_network"
    }

    split { field => "m_network" }
    mutate {
          remove_field => [ "temp_network", "@version", "[network][organizationId]", "@timestamp" ]
    }

    ##################################################################################
    ### Get Meraki Device Information per network (org/network/device) every minute
    ##################################################################################

    http {
        url => "https://api.meraki.com/api/v0/networks/%{[m_network][id]}/securityEvents?timespan=60"
        verb => "GET"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json" }
        target_body =>  "alerts" 
        target_headers => "temp_events"
    }

    split { field => "alerts" }
    mutate {
          remove_field => [ "temp_events", "@version", "@timestamp" ]
    }

    

    mutate {
        add_field => { 
            "[ecs][version]" => "1.5"
            "[event][kind]" => "alert" 
            "[event][category]" => 	intrusion_detection 
            "[event][outcome]" => "success"
            "[event][module]" => "meraki" 
            "[event][dataset]" => "meraki.amp" 
            "[observer][vendor]" => "meraki" 
            "time" => "%{[alerts][ts]}"
        }
        rename => { "[alerts][priority]" => "[event][severity]" }
        split => [ "[alerts][srcIp]", ":" ]
        split => [ "[alerts][destIp]", ":" ]
        split => [ "[alerts][protocol]", "/" ]
        split => [ "[alerts][signature]", ":" ]
    }

    if [alerts][blocked] { 
        mutate { 
            add_field => { 
                "[event][action]" => "block"  
                "[event][type]" => [ "connection", "denied" ]
            }
        }
    } 
    else {
        mutate { 
            add_field => { 
                "[event][action]" => "info" 
                "[event][type]" => "connection" 
}
        }
    }

    if [alerts][clientMac] != "null" { mutate { rename => { "[alerts][clientMac]" => "[source][mac]" } } }

    grok {
        match => { "[alerts][message]" => "%{NOTSPACE:[rule][category]} %{GREEDYDATA:[rule][description]}" }
    }
    
    ######################################################
    ###         Fix for Nanosecond timestamps          ###
    ######################################################
    mutate {

        add_field => { 
            "[source][ip]" => "%{[alerts][srcIp][0]}"  
            "[source][port]" => "%{[alerts][srcIp][1]}"
            "[destination][ip]" => "%{[alerts][destIp][0]}"  
            "[destination][port]" => "%{[alerts][destIp][1]}"
            "[rule][id]" => "%{[alerts][signature][0]}-%{[alerts][signature][1]}"
            "[rule][reference]" => "https://snort.org/rule-docs/%{[rule][id]}"
            "[network][transport]" => "%{[alerts][protocol][0]}"
            "[network][type]" => "%{[alerts][protocol][1]}"
            "[rule][name]" => "%{[alerts][ruleId]}"
            "[related][ip]" => [ "%{[source][ip]}", "%{[destination][ip]}" ] 
        }
        split => [ "time", "." ]

    }

    truncate {
        fields => "[time][1]"
        length_bytes => 3
    }
    
    mutate { 
        add_field => { "tstamp" => "%{[time][0]}%{[time][1]}" } 
        convert => { "tstamp" => "integer" }
    }

      mutate {
        
    }

    date {
        match => [ "tstamp", "UNIX_MS"]
        target => "@timestamp"
    }

    mutate {
        remove_field => [ "[organization]", "[m_network]", "[alerts]", "time", "[tstamp]" ]
    }

}

output {

    elasticsearch {
        hosts => "${ES77_HOST}"
        user => "${ES77_INGEST}"
        password => "${ES77_INGEST_PW}"
        index => "ecs-meraki-amp"
    #    pipeline => "meraki"
    }

    # file {
    #    path => "/var/log/logstash/syslog/meraki-amp.json"
    # }
}