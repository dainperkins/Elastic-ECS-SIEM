######################################################################################
#                                                                                  
#  Meraki API Device Poller - Base Device Information for enrichment index, asset                                                 
#                                                                                  
#  Last Revised:    04/22/2020
#  Transport:       HTTP Poller                                   
#  Compatibility:   ecs 1.5.0                                    
#  Notes:           Logstash pipeline to pull Meraki Organization & Networks
#                   Sends to device specific pipelines for additional context
#                   Verified for Meraki API v0,  MX, MXW, MS2, MR
#                   No access to Z, MS3, Camera
# 
#
#    !! WARNING !!   !! WARNING !!   !! WARNING !!   !! WARNING !!   !! WARNING !!  
#        If you enable VLANs on MX/W devices SSIDs will need to be reenabled!!!
######################################################################################

input {

    ##################################################################################
    # Start with Meraki Orgs
    ##################################################################################

    http_poller {
        urls => {
            meraki => {
                method => get
                url => "https://api.meraki.com/api/v0/organizations"
                headers => {
                    "X-Cisco-Meraki-API-Key" => "${meraki_api}"
                    Accept => "application/json"
                }
            }
        }
        request_timeout => 60
        schedule => { every => "1d" }
        codec => "json"
        metadata_target => "temp_org"
        target => "organization"
    }
    
}

filter {
    mutate {
          remove_field => [ "temp_org", "[organization][samlConsumerUrl]", "[organization][samlConsumerUrls]" ]
          remove_field => [ "@version", "[organization][@timestamp]", "[organization][@version]", "@timestamp"  ]
    }

    ##################################################################################
    ### Get Meraki Network ids per organiaztion 
    ##################################################################################

    http {
        url => "https://n257.meraki.com/api/v0/organizations/%{[organization][id]}/networks"
        verb => "GET"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json" }
        target_body =>  "network" 
        target_headers => "temp_network"
    }

    split { field => "network" }
    mutate {
          remove_field => [ "temp_network", "@version", "[network][organizationId]", "@timestamp" ]
    }

    ##################################################################################
    ### Get Meraki Device Information per network (org/network/device)
    ##################################################################################

    http {
        url => "https://api.meraki.com/api/v0/networks/%{[network][id]}/devices"
        verb => "GET"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json" }
        target_body =>  "device" 
        target_headers => "temp_device"
    }

    split { field => "device" }
    mutate {
          remove_field => [ "temp_device", "@version", "@timestamp", "[device][networkId]" ]
    }

    ##################################################################################
    ### General Device Changes for ECS
    ##################################################################################

    ## Split up Firmware Information, skip offline devices

    if  [device][firmware] != "Not running configured version" {
        mutate { add_field => { "firmware" => "%{[device][firmware]}" } }
        mutate { split => { "firmware" => "-" } }
        mutate {
            add_field => { 
                "[os][family]" => "%{[firmware][0]}" 
                "[os][version]" =>  "%{[firmware][1]}.%{[firmware][2]}" 
                "[os][full]" => "%{[firmware][0]} %{[firmware][1]}.%{[firmware][2]}" 
            }
        }
    }
    else {
        mutate {  update => { "[device][firmware]" => "unknown" } }
    }

    ## Internal address / geo Parsing based on Meraki Dashboard
    ######################################################################################
    ## name;city_name;region_name;country_iso_code;region_iso_code;continent_name

    grok {
        match => { "[device][address]" => "%{DATA:[geo][name]};%{DATA:[geo][city_name]};%{DATA:[geo][region_name]};%{WORD:[geo][country_iso_code]}-%{WORD:[geo][region_iso_code]};%{GREEDYDATA:[geo][continent_name]}" }
    }

    mutate { 
        ## update region ISO code
        update => { "[geo][region_iso_code]" => "%{[geo][country_iso_code]}-%{[geo][region_iso_code]}" } 
 
        ## Add root level enrichment Fields for direct insertion
        add_field => { 
            "mac" => "%{[device][mac]}" 
            "name" => "%{[device][name]}" 
            "product" => "%{[device][model]}" 
            "serial_number" => "%{[device][serial]}" 
            "[geo][location][lat]" => "%{[device][lat]}"
            "[geo][location][lon]" => "%{[device][lng]}"
        }
    }
}

output {

    file {
        path => "/tmp/logstash/meraki-base.json"
    }

    ## Handle MX & MS3 L3 Switches
    if "MX" in [device][model] or "MS3" in [device][model] {
        pipeline { send_to => "meraki-mx"  }
    }

    ## Handle MR Wireless
    else if "MR" in [device][model] {
        pipeline { send_to => "meraki-mr"  }
    } 

    ## HAndle MS2 L2 Switches
    else if "MS2" in [device][model] {
        pipeline { send_to => "meraki-ms"  }
    } 

    if "W" in [device][model] {
        pipeline { send_to => "meraki-mxw"  }
    }



}