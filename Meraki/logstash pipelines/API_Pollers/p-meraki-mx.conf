######################################################################################
#                                                                                  
#  Meraki API Device Poller - MX VLANs                                                
#                                                                                  
#  Last Revised:    04/22/2020
#  Transport:       HTTP Poller                                   
#  Compatibility:   ecs 1.5.0                                    
#  Notes:           Logstash pipeline to pull Meraki MX VLANS ( & lanIp)
#    !! WARNING !!   !! WARNING !!   !! WARNING !!   !! WARNING !!   !! WARNING !!  
#        If you enable VLANs on MX/W devices SSIDs will need to be reenabled!!!
######################################################################################
input { 
    pipeline { 
        address => "meraki-mx" 
    } 
}
filter {

 ##################################################################################
    ### Get Meraki MX & L3 MS Switch VLANS
    ##################################################################################
    http {
        url => "https://api.meraki.com/api/v0/networks/%{[network][id]}/vlans"
        verb => "GET"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json" }
        target_body =>  "vlan" 
        target_headers => "temp_vlan"
    }

    split { field => "vlan" }
    
    ## Fix LanIp for MX Series & populate top level enrichments
    mutate {
        update => { "[device][lanIp]" => "%{[vlan][applianceIp]}" }
        remove_field => [ "[firmware]", "[vlan][fixedIpAssignments]", "[vlan][dhcpHandling]", "[vlan][dhcpLeaseTime]", "[vlan][networkId]" ]
        remove_field => [ "[vlan][reservedIpRanges]", "[vlan][dnsNameservers]", "[vlan][dhcpOptions]" ]
      # add_field => { "[vlan][id]" => "%{[vlan][id]}" }
    }

    ## Rename Meraki data under Merki Objects
    mutate {
        remove_field => [ "temp_vlan" ]
        rename => [ "[vlan]", "[meraki][vlan]" ]
        rename => [ "[network]", "[meraki][network]" ]
        rename => [ "[organization]", "[meraki][organization]" ]
        rename => [ "[device]", "[meraki][device]" ]
        rename => [ "[firmware]", "[meraki][firmware]" ]
        add_field => { 
            "ip" => "%{[meraki][device][lanIp]}" 
        }
    }
}

output {

    elasticsearch {
        hosts => "${ES77_HOST}"
        user => "${ES77_INGEST}"
        password => "${ES77_INGEST_PW}"
        index => "ecs-asset-meraki"
    }
}