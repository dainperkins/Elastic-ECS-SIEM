######################################################################################
#                                                                                  
#  Meraki API Device Poller                                                  
#                                                                                  
#  Last Revised:    03/05/2020
#  Transport:       HTTP Poller                                   
#  Compatibility:   ecs 1.5.0                                    
#  Notes:           Initial config to pull device information from Meraki API for 
#                   Enrichment Data
#
######################################################################################

input {


  ## http Poller to Meraki API
  http_poller {
    type => "meraki.devices"
    urls => {
      meraki => {
        method => get
        url => "https://api.meraki.com/api/v0/organizations/${meraki_org}/devices"
        headers => {
            "X-Cisco-Meraki-API-Key" => "${meraki_api}"
            Accept => "application/json"
        }
      }
    }
    request_timeout => 60
    schedule => { every => "24h"}
    codec => "json"
    metadata_target => "http_poller_metadata"
  }
}


filter {

  if [lanIp] {
    mutate { rename => [ "lanip", "[observer][ip]" ] }
  }
  
  mutate {
      ######################################################
      ###            Rename direct translations          ###
      ######################################################
      rename => [ "serial", "[observer][serial]" ]
      rename => [ "name", "[observer][hostname]" ]
      rename => [ "model", "[observer][product]" ]
      rename => [ "networkId", "[observer][name]" ]
      rename => [ "lat", "[observer][geo][location][lat]" ]
      rename => [ "lng", "[observer][geo][location][lon]" ]
      rename => [ "mac", "[observer][mac]" ]

      ######################################################
      ###       Split Firmwre for family, version...     ###
      ######################################################
      split => { "firmware" => "-" }
      add_field => { "[observer][os][family]" => "%{[firmware][0]}" }
      add_field => { "[observer][os][version]" =>  "%{[firmware][1]}.%{[firmware][2]}" }    
      add_field => { "[observer][os][full]" => "%{[firmware][0]} %{[firmware][1]}.%{[firmware][2]}" }

      ######################################################
      ###      Add constant fields     ###
      ######################################################
      add_field => { "[observer][vendor]" => "meraki" }
      add_field => { "[ecs][version]" => "1.5.0" }
      add_field => { "[event][category]" => "info" }
      add_field => { "[event][dataset]" => "meraki.devices" }
      add_field => { "[event][kind]" => "state" }
      add_field => { "[event][type]" => "info"}

      #Remove Extra Fields
      remove_field =>  [ "wan1Ip", "wan2Ip", "address", "notes", "[http_poller_metadata]", "url", "configurationUpdatedAt", "[firmware]", "type", "tags" ] 
  }

  ######################################################
  ###       Set observer types by OS Label           ###
  ######################################################
  if [observer][os][family] == "wired" {
      mutate { add_field => { "[observer][type]" => "firewall" } } 
  }

  if [observer][os][family] == "wireless" {
      mutate { add_field => { "[observer][type]" => "access point" } } 
  }

  if [observer][os][family] == "switch" {
      mutate { add_field => { "[observer][type]" => "switch" } } 
  }
}


output {
    elasticsearch {
        hosts => "${ES_URL}"
        user => "${ES_INGEST}"
        password => "${ES_INGEST_PW}"
        index => "ecs-meraki-devices"
    }
}
