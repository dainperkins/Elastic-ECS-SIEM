######################################################################################
#                                                                                  
#  Meraki URL Logstash Confgiguration                                                  
#                                                                                  
#  Last Revised:   01/03/2019 
#  Transport:      udp 9514                                   
#  Compatibility:  ecs 1.5.0 dev                                    
#  Notes:   updated to arrays for nested fields, added domain fixes       
#           While waiting for pipelines, setup dashboard to send each 
#           event type to its own syslog port for easy parsing
#           Note - config assumes seperate pipeline, needs "type" logic for 
#           use in a single pipeline
#           Cleaned up but need to test!!
######################################################################################

## discrete port for easy identification
input {
      udp {
      
        ## I've run into *nix configs that default to ipv6 and won't open an
        ## IPv4 port w/o hard coding, have yet to figure out why, so often hard 
        ## code IP the pipeline should listen on
        host => [logstash ip address]
        
        ## Update port for your environment, easiest way is to split Meraki
        ## Logs - URLs, events, etc to different ports. Configs coming
        ## soon for a single Meraki syslog target & multiple pipelines
        port  => 9514
    }
}

filter {

    ######################################################
    ###       Optional Hash Original Message           ###
    ######################################################
    fingerprint {
        target => "[event][hash]"
    }

    ######################################################
    ### Parse Message - logic can check for "urls"     ###
    ######################################################
      grok {    
          match => { "message" => "%{INT:[millis]}.%{INT:[nanos]} %{WORD:[observer][name]} %{WORD:[event][module]} src=%{IP:[source][ip]}:%{NUMBER:[source][port]} dst=%{IP:[destination][ip]}:%{NUMBER:[destination][port]} mac=%{MAC:[source][mac]} ?(?:agent=%{QS:[useragent]})? request: %{WORD:[http][request][method]} %{URI:[url][original]}"}
      }

    ######################################################
    ###        Fix Meraki HTTPS url path (...)         ###
    ######################################################
    mutate { gsub => [ "[url][original]", "...", "" ] }
    
    
    ######################################################
    ###        split url into component parts.         ###
    ######################################################
    if [url][original] {
      grok {
        match => { "[url][original]" => "%{URIPROTO:[url][scheme]}://(?:%{USER:[url][username]}(?::[^@]*)?@)?(?:%{URIHOST:[url-domain]})?(?:%{URIPATHPARAM:[url][path]})?" }
      }
    }

    ######################################################
    ###                 Domain Parsing                 ###
    ######################################################
    tld {
      source => "[url-domain]"
      target => "urls"
    }

    if [domains][trd]{
      mutate {
        join =>  { "[domains][trd]" => "." }
      }
    }

    ## working towards setting original nanosecond since epoch as timestamp
    ## truncate {
    ##    fields => "nanos"
    ##    length_bytes => 3
    ## }

     mutate {

        ######################################################
        ###                Add core ECS fields             ###
        ######################################################
        add_field => { "[ecs][version]" => "1.5.0" }
        add_field => { "[event][action]" => "url.accessed"
        add_field => { "[event][category]" => "web" }
        add_field => { "[event][dataset]" => "meraki.url" }
        add_field => { "[event][kind]" => "event" }
        add_field => { "[event][outcome]" => "success" }
        add_field => { "[event][type]" => "connection"}

        rename =>    { "message" => "[event][original]" }

        ######################################################
        ###  Use event time for @timestamp - tbd fix nano  ###
        ######################################################
        add_field => { "[event][created]" => "%{@timestamp}" }
        ## update => { "@timestamp" =>"%{millis}%{nanos}" }

        ######################################################
        ###         Populate included Observer fields      ###
        ######################################################
        add_field => { "[observer][vendor]" => "Meraki" }
        rename =>    { "[host]" => "[observer][ip]"  }

        ######################################################
        ###             URL Domain Corrections             ###
        ######################################################
        rename =>    { "[urls][domain]" => "[url][registered_domain]"  }
        rename =>    { "[urls][trd]" => "[url][subdomain]"  }
        rename =>    { "[urls][tld]" => "[url][top_level_domain]" } 
        rename =>    { "[url-domain]" => "[url][domain]" } 

        ######################################################
        ###         standardise http Request Method        ###
        ######################################################
        lowercase => [ "[http][request][method]" ]

        ######################################################
        ###       Fix observer names - . & - issues.       ###
        ######################################################
        mutate {
            gsub => [ "[observer][name]", "_", "." ]
        }
        
        ######################################################
        ###             Remove Temp fields, etc.           ###
        ######################################################
        remove_field => [ "millis", "nanos", "ip" , "port", "@version", "type", "[urls][sld]", "[urls][subdomain]", "[urls]" ]

        }
    }
}


output {
        elasticsearch {
            hosts => "${ES_Host}"
            user => "${ES_INGEST}"
            password => "${ES_INGEST_PW}"
            index => "ecs-meraki-url"
          
            ######################################################
            ###   pipeline for user agent, geoip, as parsing   ###
            ######################################################
            pipeline => "meraki"
      }
}
