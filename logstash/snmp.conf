### ASA SNMP Interface polling - 10-13-2020

input {
    snmp {
        hosts => [ {host => "udp:10.10.10.10/161" community => "RO SNMP COMMUNITY"} ]
        tables => [
            { "name" => "interface" "columns" => [".1.3.6.1.2.1.2.2.1.1",".1.3.6.1.2.1.2.2.1.1",".1.3.6.1.2.1.31.1.1.1.1",".1.3.6.1.2.1.2.2.1.3",".1.3.6.1.2.1.2.2.1.4",".1.3.6.1.2.1.2.2.1.5",".1.3.6.1.2.1.2.2.1.6",".1.3.6.1.2.1.2.2.1.7",".1.3.6.1.2.1.2.2.1.8",".1.3.6.1.2.1.2.2.1.9",".1.3.6.1.2.1.2.2.1.10",".1.3.6.1.2.1.2.2.1.13",".1.3.6.1.2.1.2.2.1.14",".1.3.6.1.2.1.2.2.1.16",".1.3.6.1.2.1.2.2.1.19",".1.3.6.1.2.1.2.2.1.20"] },
            { "name" => "cpu" "columns" => [ ".1.3.6.1.4.1.9.9.109.1.1.1.1.7" ] } ]
        get => [ ".1.3.6.1.4.1.9.9.48.1.1.1.5.1", ".1.3.6.1.4.1.9.9.48.1.1.1.6.1", ".1.3.6.1.2.1.47.1.1.1.1.13.1",".1.3.6.1.2.1.47.1.1.1.1.11.1",".1.3.6.1.2.1.47.1.1.1.1.9.1",".1.3.6.1.2.1.47.1.1.1.1.2.1",".1.3.6.1.2.1.47.1.1.1.1.10.1", ".1.3.6.1.4.1.9.9.147.1.2.2.2.1.5.40.6", ".1.3.6.1.4.1.9.9.147.1.2.2.2.1.5.40.7" ]
        walk => ["1.3.6.1.2.1.1"]
        interval => 60
        oid_path_length => 2
        mib_paths => [ "/etc/logstash/snmp" ]
    }
}

filter {
    ### rename & remove basic snmp host fields
    mutate {
        rename => { 
            "host" => "[host][ip]" 
            "sysName.0" => "[host][name]"
            "sysDescr.0" => "[host][description]"
            "entPhysicalSerialNum.1" => "[host][serial_number]"
            "entPhysicalModelName.1" => "[host][model][name]"
            "entPhysicalFirmwareRev.1" => "[host][firmware]"
            "entPhysicalDescr.1" => "[host][model][detail]"
            "sysUpTime.sysUpTimeInstance" => "[host][uptime]"
            "sysContact.0" => "[host][contact]"
            "sysLocation.0" => "[host][location]"
            "entPhysicalSoftwareRev.1" => "[host][version]"

        }
        remove_field => [ "@version", "sysObjectID.0", "sysServices.0" ]
    }

    ### clone event - 1 for interfaces[], cpu[], memory?? 
    clone { 
        clones => ["interfaces", "cpus", "base"] 
    }

    ### use type in metadata for splitting cpu / memory / 
    mutate {
        add_field => { "[@metadata][type]" => "%{[type]}" }
        remove_field => [ "[type]" ]
    }
        

    if [@metadata][type] == "interfaces" {
        split {
            field => "interface"
        }

        if [interface][ifAdminStatus] == "2" or [interface][ifOperStatus] == 2 {
            drop { }
        }

        mutate {
            rename => { 
                "[interface][ifIndex]" => "[interface][index]"
                "[interface][ifDesc]" => "[interface][description]"
                "[interface][ifName]" => "[interface][name]"
                "[interface][ifType]" => "[interface][type]"
                "[interface][ifMtu]" => "[interface][mtu]"
                "[interface][ifSpeed]" => "[interface][speed]"
                "[interface][ifPhysAddress]" => "[interface][mac]"
                "[interface][ifAdminStatus]" => "[interface][admin_status]"
                "[interface][ifOperStatus]" => "[interface][status]"
                "[interface][ifLastChange]" => "[interface][last_changed]"
                "[interface][ifInOctets]" => "[interface][bytes_in]"
                "[interface][ifInUcastPkts]" => "[interface][packets_in]"
                "[interface][ifInNUcastPkts]" => "[interface][nu_packets_in]"
                "[interface][ifInDiscards]" => "[interface][discards_in]"
                "[interface][ifInErrors]" => "[interface][errors_in]"
                "[interface][ifInUnknownProtos]" => "[interface][unknoes_in]"
                "[interface][ifOutOctets]" => "[interface][bytes_out]"
                "[interface][ifOutUcastPkts]" => "[interface][packets_out]"
                "[interface][ifOutNUcastPkts]" => "[interface][nu_packets_out]"
                "[interface][ifOutDiscards]" => "[interface][discards_out]"
                "[interface][ifOutErrors]" => "[interface][errors_out]"
            }
            remove_field => [ "[cpu]", "40.6", "40.7" ]
        }
    }
    
    ### Break up CPU table
    if [@metadata][type] == "cpus" {
        split {
            field => "cpu"
        }
        mutate { 
            rename => { 
                "[cpu][cpmCPUTotal1minRev]" => "[host][cpu][percent]"
                "[cpu][index]" => "[host][cpu][index]"
            }
            remove_field => [ "[interface]", "40.6", "40.7", "[cpu]" ]  
        }
    }

    ### Write out base host metrics (connections, memory, etc
   if [@metadata][type] == "base" {
        mutate {  
            rename => { 
                "40.6" => "[host][xlates][count]"
                "40.7" => "[host][xlates][max]"
                "5.1" => "[host][mem_used]"
                "6.1" => "[host][mem_free]"
            }
        remove_field => [ "[interface]",  "[cpu]" ] }
    }
}

output {
    elasticsearch {
        hosts => "${ES_HOST}"
        user => "${ES_USER}"
        password => "${ES_PW}"
        index => "ecs-snmp"
    }
}
